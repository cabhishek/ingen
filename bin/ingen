#!/usr/bin/env node

var fs = require('fs-extra')
var path = require('path')
var program = require('commander')
var connect = require('connect')

var basePath = path.normalize(__dirname + path.sep + '..')
var pkg = fs.readJSONSync(path.join(basePath, 'package.json'))
var site = require("../lib/site")

program
  .version(pkg.version)
  .option('-d, --destination [dir]', 'destination directory (defaults to ./_site)', './_site')
  .option('-e, --environment [value]', 'a global environment varible (defaults to "prod")', 'prod')
  .option('-s, --source [dir]', 'source directory (defaults to ./)', './')


program
  .command('build')
  .description('Build the site')
  .action(function(p){
    console.log('building...')
    site.build()
  })

program
  .command('serve')
  .description('Serve the site locally')
  .option('-p, --port [number]', 'port to listen on (defaults to 4000)', 4000)
  .action(function(){
    console.log('serve')

    site.build()

    var DeepWatch = require('deep-watch')
    var options = {exclude: ['_site', 'node_modules', '_sass']}
    var dw = new DeepWatch('.', options, function(event, filename) {
      console.log(event, filename)
      site.rebuild()
    })

    dw.start()

    connect()
      .use(connect.logger('dev'))
      .use(connect.static('_site'))
      .listen(1234)

  })

program.on('source', function() {
  console.log("source option set...")
})

program.on('destination', function() {
  console.log("destination option set...")
})

program.parse(process.argv)

// default to showing --help
if (program.rawArgs.length < 3) program.help()
