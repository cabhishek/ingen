#!/usr/bin/env node

var fs = require('fs-extra');
var path = require('path');
var program = require('commander');
var camelCase = require('change-case').camelCase;
var assign = require('lodash-node/modern').assign;

var basePath = path.normalize(__dirname + path.sep + '..');
var pkg = fs.readJSONSync(path.join(basePath, 'package.json'));
var Site = require('../lib/site');

function getOptions(keys) {
  var options = {};
  for (var i = 0, key; key = keys[i]; i++) {
    if (key in program) options[key] = program[key];
  }
  return options;
}

function createSite() {
  var fileConfigSettings = fs.existsSync(program.config)
    ? fs.readJSONSync(program.config)
    : {};

  var commandLineOptions = getOptions([
    'source',
    'destination',
    'env',
    'port',
    'watch',
    'includeDrafts'
  ]);

  return new Site(assign(fileConfigSettings, commandLineOptions));
}

program
  .version(pkg.version)
  .usage('[command] [options]')
  .option('-s, --source [dir]',
    'set the source directory (defaults to ".")')
  .option('-d, --destination [dir]',
    'set the destination directory (defaults to "_site")')
  .option('-e, --env [value]',
    'set the environment (defaults to "production")')
  .option('-p, --port [number]',
    'set the port to listen on (defaults to 4000)')
  .option('-w, --watch',
    'watch for change and rebuild the site')
  .option('-i, --include-drafts',
    'ignore posts with a draft value of `true`')
  .option('-c, --config [filepath]',
    'location of the config file (defaults to "_config.json")',
    './_config.json');

program
  .command('build')
  .description('Build the site')
  .action(function() {
    createSite().build();
  });

program
  .command('serve')
  .description('Serve the site locally')
  .action(function() {
    createSite().serve();
  });

program.parse(process.argv);

// default to showing --help
if (program.rawArgs.length < 3) program.help();
